version: '2'

services:

  flask_template:
    restart: always
    image: flask_template
    build:
      context: ../
      dockerfile: Dockerfile
    # grokzen/redis-cluster 这个镜像创建的 redis 集群，集群内部节点 ip 是 127.0.0.1
    # 所以 flask_template 必须和 redis-cluster 共用一个 private network
    # 否则会出现 redis py 库从 cluster 学习到其他节点 ip 后，无法连接的情况
    network_mode: 'service:redis_cluster'

    volumes:
      - ../src:/opt/app
    environment:
      STAGE: development
    command: sleep 999999999

  cassandra:
    restart: always
    image: cassandra:3.11
    ports:
      - 9042:9042

  zookeeper:
    restart: always
    image: yfgu9nc3.mirror.aliyuncs.com/confluentinc/cp-zookeeper:latest
    ports:
    - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    restart: always
    image: yfgu9nc3.mirror.aliyuncs.com/confluentinc/cp-kafka:latest
    depends_on:
    - zookeeper
    ports:
    - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  centrifugo:
    image: yfgu9nc3.mirror.aliyuncs.com/centrifugo/centrifugo:v2.5.1
    ports:
      - 8999:8000
    environment:
      CENTRIFUGO_SECRET: mytestsecret
      CENTRIFUGO_API_KEY: 2f281382-c858-4020-bf03-f469ab7512bc

  redis_cluster:
    restart: always
    image: yfgu9nc3.mirror.aliyuncs.com/grokzen/redis-cluster:5.0.0
    ports:
      - 7000-7006:7000-7006
    environment:
      STANDALONE: 'true'
      IP: '0.0.0.0'
      INITIAL_PORT: '7000'
      MASTERS: '3'
      SLAVES_PER_MASTER: '1'

  jaeger:
    restart: always
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
